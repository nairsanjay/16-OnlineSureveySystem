{"ast":null,"code":"import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport jwt from 'jsonwebtoken';\nconst API_URL = \"http://localhost:5000/api/user/\"; //const API_URL = \"http://192.168.225.23:5000/api/user/\"\n\nvar mongoose = require('mongoose');\n\nexport default {\n  isAuthenticated() {\n    const token = localStorage.getItem('userTicket');\n\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  getGuestUser() {\n    return {\n      name: \"Guest 123\",\n      userId: \"guest123\",\n      email: \"coolboy69@gg.com\"\n    };\n  },\n\n  authenticate(cb) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 100);\n  },\n\n  signout(cb) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100);\n  },\n\n  loginWithGoogle(res) {\n    var data = {\n      name: res.profileObj.name,\n      email: res.profileObj.email,\n      image: res.profileObj.imageUrl\n    };\n    return axios.post(API_URL + \"login\", data).then(response => {\n      console.log(response.data);\n\n      if (response.data.accessToken) {\n        localStorage.setItem(\"userTicket\", JSON.stringify(response.data.accessToken));\n      }\n\n      return response.data;\n    });\n  },\n\n  loginAsGuest() {\n    var userData2 = {\n      name: \"Cool Guest\",\n      email: \"coolboy69@gg.com\"\n    };\n    return axios.post(API_URL + \"login\", userData2).then(response => {\n      console.log(response.data);\n\n      if (response.data.accessToken) {\n        localStorage.setItem(\"userTicket\", JSON.stringify(response.data.accessToken));\n        console.log('Hello from inside');\n      }\n\n      return response.data;\n    });\n    console.log(localStorage.getItem('userTicket'));\n  },\n\n  logout() {\n    localStorage.removeItem(\"userTicket\");\n  },\n\n  getCurrentUser() {\n    return jwtDecode(localStorage.getItem('userTicket'));\n  }\n\n};","map":{"version":3,"sources":["C:/Users/sanja/Documents/GitHub/OnlineSureveySystem/Project/src/services/authService.js"],"names":["axios","jwtDecode","jwt","API_URL","mongoose","require","isAuthenticated","token","localStorage","getItem","getGuestUser","name","userId","email","authenticate","cb","setTimeout","signout","loginWithGoogle","res","data","profileObj","image","imageUrl","post","then","response","console","log","accessToken","setItem","JSON","stringify","loginAsGuest","userData2","logout","removeItem","getCurrentUser"],"mappings":"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","sourcesContent":["\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport jwt from 'jsonwebtoken';\r\nconst API_URL = \"http://localhost:5000/api/user/\";\r\n//const API_URL = \"http://192.168.225.23:5000/api/user/\"\r\nvar mongoose = require('mongoose');\r\n\r\nexport default   {\r\n\r\n    isAuthenticated() {\r\n      const token = localStorage.getItem('userTicket')\r\n        if (token) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n    },\r\n\r\n    getGuestUser(){\r\n        return {name: \"Guest 123\", userId: \"guest123\", email: \"coolboy69@gg.com\"}\r\n    },\r\n\r\n    authenticate(cb) {\r\n      this.isAuthenticated = true;\r\n      setTimeout(cb, 100);\r\n    },\r\n\r\n    signout(cb) {\r\n      this.isAuthenticated = false;\r\n      setTimeout(cb, 100);\r\n    },\r\n\r\n\r\n    loginWithGoogle(res) {\r\n      var data = {\r\n        name: res.profileObj.name,\r\n        email : res.profileObj.email,\r\n        image: res.profileObj.imageUrl\r\n      }\r\n\r\n      return axios\r\n        .post(API_URL + \"login\", data)\r\n        .then(response => {\r\n          console.log(response.data); \r\n          if (response.data.accessToken) {\r\n            localStorage.setItem(\"userTicket\", JSON.stringify(response.data.accessToken));          \r\n          }\r\n          return response.data;\r\n        });\r\n    },\r\n\r\n    loginAsGuest(){\r\n\r\n      var userData2={\r\n        name: \"Cool Guest\",  \r\n        email: \"coolboy69@gg.com\"\r\n      }\r\n   \r\n\r\n       return axios\r\n        .post(API_URL + \"login\", userData2)\r\n        .then(response => {\r\n          console.log(response.data); \r\n          if (response.data.accessToken) {\r\n            localStorage.setItem(\"userTicket\", JSON.stringify(response.data.accessToken)); \r\n            console.log('Hello from inside');         \r\n          }\r\n          return response.data;\r\n        });\r\n         console.log(localStorage.getItem('userTicket'));\r\n\r\n    },\r\n\r\n    logout() {\r\n      localStorage.removeItem(\"userTicket\");\r\n    },\r\n\r\n    getCurrentUser() {\r\n        \r\n       return jwtDecode(localStorage.getItem('userTicket'));\r\n     },\r\n  };"]},"metadata":{},"sourceType":"module"}