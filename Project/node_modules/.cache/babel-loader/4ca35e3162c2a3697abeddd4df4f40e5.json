{"ast":null,"code":"var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\n\n;\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n  var p = buf.toString('base64');\n  var out = ['-----BEGIN ' + options.label + '-----'];\n\n  for (var i = 0; i < p.length; i += 64) out.push(p.slice(i, i + 64));\n\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};","map":{"version":3,"sources":["C:/Users/abc/Documents/GitHub/16-OnlineSureveySystem/Project/node_modules/asn1.js/lib/asn1/encoders/pem.js"],"names":["inherits","require","DEREncoder","PEMEncoder","entity","call","enc","module","exports","prototype","encode","data","options","buf","p","toString","out","label","i","length","push","slice","join"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,OAAD,CAAxB;;AAEA,SAASE,UAAT,CAAoBC,MAApB,EAA4B;AAC1BF,EAAAA,UAAU,CAACG,IAAX,CAAgB,IAAhB,EAAsBD,MAAtB;AACA,OAAKE,GAAL,GAAW,KAAX;AACD;;AAAA;AACDN,QAAQ,CAACG,UAAD,EAAaD,UAAb,CAAR;AACAK,MAAM,CAACC,OAAP,GAAiBL,UAAjB;;AAEAA,UAAU,CAACM,SAAX,CAAqBC,MAArB,GAA8B,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAC3D,MAAIC,GAAG,GAAGX,UAAU,CAACO,SAAX,CAAqBC,MAArB,CAA4BL,IAA5B,CAAiC,IAAjC,EAAuCM,IAAvC,CAAV;AAEA,MAAIG,CAAC,GAAGD,GAAG,CAACE,QAAJ,CAAa,QAAb,CAAR;AACA,MAAIC,GAAG,GAAG,CAAE,gBAAgBJ,OAAO,CAACK,KAAxB,GAAgC,OAAlC,CAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAAC,CAACK,MAAtB,EAA8BD,CAAC,IAAI,EAAnC,EACEF,GAAG,CAACI,IAAJ,CAASN,CAAC,CAACO,KAAF,CAAQH,CAAR,EAAWA,CAAC,GAAG,EAAf,CAAT;;AACFF,EAAAA,GAAG,CAACI,IAAJ,CAAS,cAAcR,OAAO,CAACK,KAAtB,GAA8B,OAAvC;AACA,SAAOD,GAAG,CAACM,IAAJ,CAAS,IAAT,CAAP;AACD,CATD","sourcesContent":["var inherits = require('inherits');\r\n\r\nvar DEREncoder = require('./der');\r\n\r\nfunction PEMEncoder(entity) {\r\n  DEREncoder.call(this, entity);\r\n  this.enc = 'pem';\r\n};\r\ninherits(PEMEncoder, DEREncoder);\r\nmodule.exports = PEMEncoder;\r\n\r\nPEMEncoder.prototype.encode = function encode(data, options) {\r\n  var buf = DEREncoder.prototype.encode.call(this, data);\r\n\r\n  var p = buf.toString('base64');\r\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\r\n  for (var i = 0; i < p.length; i += 64)\r\n    out.push(p.slice(i, i + 64));\r\n  out.push('-----END ' + options.label + '-----');\r\n  return out.join('\\n');\r\n};\r\n"]},"metadata":{},"sourceType":"script"}