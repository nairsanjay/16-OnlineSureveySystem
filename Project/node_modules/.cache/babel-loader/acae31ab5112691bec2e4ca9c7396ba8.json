{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanja\\\\Documents\\\\GitHub\\\\OnlineSureveySystem\\\\Project\\\\src\\\\Components\\\\Form\\\\ImageUplaodModel.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport uploadService from '../../services/uploadService';\n\nfunction ImageUplaodModel(props) {\n  const [image, setImage] = React.useState(undefined);\n  const [imageWarning, setImageWarning] = React.useState(\"\"); // const selectImage = (e)=>{\n  //   setImage({ image:e.target.files[0]})\n  // }\n\n  const uploadImage = () => {\n    console.log(props.contextData);\n    console.log(image);\n    console.log(image.size);\n\n    if (image.size > 3110670) {\n      setImageWarning(\"File Size is too big\");\n    } else if (0) {//only images.\n    } else {\n      const formData = new FormData();\n      formData.append('myfile', image);\n      uploadService.uploadImage(formData).then(data => {\n        // console.log(data);\n        var imageLink = data.host + \"/\" + data.image;\n        props.handleImagePopClose();\n        props.updateImageLink(imageLink, props.contextData);\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setImageWarning(resMessage);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: props.handleImagePopOpen,\n    onClose: props.handleImagePopClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Upload Image Here\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Hey, Creating a Community is fun and easy, just fill these easy fields and get your personlized gang ready within seconds. for question\"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"file\",\n    onChange: e => setImage(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), imageWarning !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, imageWarning) : \"\"), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleImagePopClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Upload\"))));\n}\n\nexport default ImageUplaodModel;","map":{"version":3,"sources":["C:/Users/sanja/Documents/GitHub/OnlineSureveySystem/Project/src/Components/Form/ImageUplaodModel.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","uploadService","ImageUplaodModel","props","image","setImage","useState","undefined","imageWarning","setImageWarning","uploadImage","console","log","contextData","size","formData","FormData","append","then","data","imageLink","host","handleImagePopClose","updateImageLink","error","resMessage","response","message","toString","handleImagePopOpen","e","target","files"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport uploadService from '../../services/uploadService';\r\n\r\nfunction ImageUplaodModel(props){\r\n\r\n  const [image, setImage] = React.useState(undefined);\r\n  const [imageWarning, setImageWarning]= React.useState(\"\");\r\n\r\n  // const selectImage = (e)=>{\r\n  //   setImage({ image:e.target.files[0]})\r\n  // }\r\n\r\n\r\n\r\n  const uploadImage = ()=>{\r\n    console.log(props.contextData);  \r\n    console.log(image);\r\n    console.log(image.size);\r\n\r\n\r\n    if(image.size > 3110670){\r\n      setImageWarning(\"File Size is too big\");\r\n    } else if (0){\r\n      //only images.\r\n    } else{\r\n\r\n      const formData = new FormData()\r\n      formData.append('myfile', image)\r\n      uploadService.uploadImage(formData)\r\n      .then((data) => {\r\n       // console.log(data);\r\n        var imageLink = data.host + \"/\" + data.image\r\n        props.handleImagePopClose();\r\n        props.updateImageLink(imageLink, props.contextData);\r\n         },\r\n         error => {\r\n           const resMessage =\r\n             (error.response &&\r\n               error.response.data &&\r\n               error.response.data.message) ||\r\n             error.message ||\r\n             error.toString();\r\n             setImageWarning(resMessage);\r\n         }      \r\n         );\r\n    }\r\n\r\n\r\n    \r\n    \r\n  }\r\n\r\n    return(\r\n        <div>\r\n            <Dialog open={props.handleImagePopOpen} onClose={props.handleImagePopClose} aria-labelledby=\"form-dialog-title\">\r\n              <DialogTitle id=\"form-dialog-title\">Upload Image Here</DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>\r\n                      Hey, Creating a Community is fun and easy, just fill these easy fields and get your personlized gang ready within seconds.\r\n                      for question \r\n                    </DialogContentText>\r\n                    <TextField\r\n                      type=\"file\"\r\n                      onChange={e => setImage(e.target.files[0])}\r\n                    />\r\n                    { imageWarning !== \"\" ? (\r\n                      <p>{imageWarning}</p>\r\n                    ): \"\"}\r\n                  </DialogContent>\r\n\r\n                  <DialogActions>\r\n                    <Button onClick={props.handleImagePopClose} color=\"primary\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={uploadImage}>\r\n                      Upload \r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ImageUplaodModel;"]},"metadata":{},"sourceType":"module"}