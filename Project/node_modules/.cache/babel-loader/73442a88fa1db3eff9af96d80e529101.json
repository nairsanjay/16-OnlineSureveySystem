{"ast":null,"code":"var inherits = require('inherits');\n\nvar Reporter = require('../base').Reporter;\n\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\n\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return {\n    offset: this.offset,\n    reporter: Reporter.prototype.save.call(this)\n  };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);else return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');\n  var res = new DecoderBuffer(this.base); // Share reporter state\n\n  res._reporterState = this._reporterState;\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function (item) {\n      if (!(item instanceof EncoderBuffer)) item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff)) return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\n\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out) out = new Buffer(this.length);\n  if (!offset) offset = 0;\n  if (this.length === 0) return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function (item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number') out[offset] = this.value;else if (typeof this.value === 'string') out.write(this.value, offset);else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};","map":{"version":3,"sources":["C:/Users/abc/Documents/GitHub/16-OnlineSureveySystem/Project/node_modules/asn1.js/lib/asn1/base/buffer.js"],"names":["inherits","require","Reporter","Buffer","DecoderBuffer","base","options","call","isBuffer","error","offset","length","exports","prototype","save","reporter","restore","res","isEmpty","readUInt8","fail","skip","bytes","_reporterState","raw","slice","EncoderBuffer","value","Array","isArray","map","item","byteLength","join","out","forEach","write","copy"],"mappings":"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","sourcesContent":["var inherits = require('inherits');\r\nvar Reporter = require('../base').Reporter;\r\nvar Buffer = require('buffer').Buffer;\r\n\r\nfunction DecoderBuffer(base, options) {\r\n  Reporter.call(this, options);\r\n  if (!Buffer.isBuffer(base)) {\r\n    this.error('Input not Buffer');\r\n    return;\r\n  }\r\n\r\n  this.base = base;\r\n  this.offset = 0;\r\n  this.length = base.length;\r\n}\r\ninherits(DecoderBuffer, Reporter);\r\nexports.DecoderBuffer = DecoderBuffer;\r\n\r\nDecoderBuffer.prototype.save = function save() {\r\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\r\n};\r\n\r\nDecoderBuffer.prototype.restore = function restore(save) {\r\n  // Return skipped data\r\n  var res = new DecoderBuffer(this.base);\r\n  res.offset = save.offset;\r\n  res.length = this.offset;\r\n\r\n  this.offset = save.offset;\r\n  Reporter.prototype.restore.call(this, save.reporter);\r\n\r\n  return res;\r\n};\r\n\r\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\r\n  return this.offset === this.length;\r\n};\r\n\r\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\r\n  if (this.offset + 1 <= this.length)\r\n    return this.base.readUInt8(this.offset++, true);\r\n  else\r\n    return this.error(fail || 'DecoderBuffer overrun');\r\n}\r\n\r\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\r\n  if (!(this.offset + bytes <= this.length))\r\n    return this.error(fail || 'DecoderBuffer overrun');\r\n\r\n  var res = new DecoderBuffer(this.base);\r\n\r\n  // Share reporter state\r\n  res._reporterState = this._reporterState;\r\n\r\n  res.offset = this.offset;\r\n  res.length = this.offset + bytes;\r\n  this.offset += bytes;\r\n  return res;\r\n}\r\n\r\nDecoderBuffer.prototype.raw = function raw(save) {\r\n  return this.base.slice(save ? save.offset : this.offset, this.length);\r\n}\r\n\r\nfunction EncoderBuffer(value, reporter) {\r\n  if (Array.isArray(value)) {\r\n    this.length = 0;\r\n    this.value = value.map(function(item) {\r\n      if (!(item instanceof EncoderBuffer))\r\n        item = new EncoderBuffer(item, reporter);\r\n      this.length += item.length;\r\n      return item;\r\n    }, this);\r\n  } else if (typeof value === 'number') {\r\n    if (!(0 <= value && value <= 0xff))\r\n      return reporter.error('non-byte EncoderBuffer value');\r\n    this.value = value;\r\n    this.length = 1;\r\n  } else if (typeof value === 'string') {\r\n    this.value = value;\r\n    this.length = Buffer.byteLength(value);\r\n  } else if (Buffer.isBuffer(value)) {\r\n    this.value = value;\r\n    this.length = value.length;\r\n  } else {\r\n    return reporter.error('Unsupported type: ' + typeof value);\r\n  }\r\n}\r\nexports.EncoderBuffer = EncoderBuffer;\r\n\r\nEncoderBuffer.prototype.join = function join(out, offset) {\r\n  if (!out)\r\n    out = new Buffer(this.length);\r\n  if (!offset)\r\n    offset = 0;\r\n\r\n  if (this.length === 0)\r\n    return out;\r\n\r\n  if (Array.isArray(this.value)) {\r\n    this.value.forEach(function(item) {\r\n      item.join(out, offset);\r\n      offset += item.length;\r\n    });\r\n  } else {\r\n    if (typeof this.value === 'number')\r\n      out[offset] = this.value;\r\n    else if (typeof this.value === 'string')\r\n      out.write(this.value, offset);\r\n    else if (Buffer.isBuffer(this.value))\r\n      this.value.copy(out, offset);\r\n    offset += this.length;\r\n  }\r\n\r\n  return out;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}